version: 2

references:
  docker_default: &docker_default
    environment:
      TZ: "/usr/share/zoneinfo/Asia/Taipei"
    docker:
      - image: circleci/node:6.10.3
  yarn_cache_key: &yarn_cache_key
    yarn-cache-{{ checksum "yarn.lock" }}
  restore_yarn: &restore_yarn
    restore_cache:
      key: *yarn_cache_key
  build_cache_key: &build_cache_key
    build-cache-{{ .Revision }}
  restore_build: &restore_build
    restore_cache:
      key: *build_cache_key
  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
      root: .
      paths:
        - ./*
  attach_workspace: &attach_workspace
    attach_workspace:
      at: .

jobs:
  bootstrap:
    <<: *docker_default
    steps:
      - checkout
      - *restore_yarn
      - run:
          name: yarn dependencies
          command: yarn
      - save_cache:
         key: *yarn_cache_key
         paths:
           - ~/.cache/yarn
      - *persist_to_workspace
  lint:
    <<: *docker_default
    steps:
      - *attach_workspace
      - run:
          name: lint
          command: |
            yarn run lint:staged
  test:
    <<: *docker_default
    steps:
      - *attach_workspace
      - run:
          name: test
          command: |
            yarn run test:ci
      - store_artifacts:
          path: coverage
      - store_test_results:
          path: coverage
  build:
    <<: *docker_default
    steps:
      - *attach_workspace
      - run: yarn run build
      - save_cache:
         key: *build_cache_key
         paths:
           - build
  deploy:
    <<: *docker_default
    steps:
      - *attach_workspace
      - *restore_build
      - setup_remote_docker
      - run: |
          echo "{\"SHA1\":\"${CIRCLE_SHA1}\",\"DATE\":\"$(date)\"}" > ./version.json
          #docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          #docker build -t arthur791004/aui:$CIRCLE_SHA1 .
          #docker push arthur791004/aui:$CIRCLE_SHA1
      - run: |
          npm run deploy

workflows:
  version: 2
  all:
    jobs:
      - bootstrap
      - lint:
          requires:
            - bootstrap
      - test:
          requires:
            - bootstrap
      - build:
          requires:
            - bootstrap
      - deploy:
          requires:
            - test
            - build
          filters:
            branches:
              only: master
